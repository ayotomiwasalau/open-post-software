name: Terraform Infrastructure CI/CD

on:
  push:
    branches: [ main, master ]
    paths: [ 'Iac/terraform/**' ]
  pull_request:
    branches: [ main, master ]
    paths: [ 'Iac/terraform/**' ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy


env:
  TF_VERSION: "1.12.2"
  TF_WORKING_DIR: "./Iac/terraform"
  TF_VAR_ec2_public_key: ${{ secrets.EC2_PUBLIC_KEY }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        # role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        # role-session-name: GitHubActions
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init with Backend
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="region=${{ secrets.AWS_REGION }}"
        terraform validate
      
    - name: Terraform Plan
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        terraform plan -out=tfplan
        terraform show tfplan
      # if: github.event_name == 'pull_request' || github.event.inputs.action == 'plan'
      
    - name: Terraform Apply
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform apply --auto-approve tfplan
      if: github.ref == 'refs/heads/main' && github.event.inputs.action == 'apply'
    
    - name: Rke up
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: |
        wget https://github.com/rancher/rke/releases/download/latest/rke_linux-amd64
        mv rke_linux-amd64 rke
        chmod +x rke
        chmod +x ./generate-rke-config.sh
        ./generate-rke-config.sh
        rke up --config rke-cluster.yml --ignore-docker-version
      if: github.ref == 'refs/heads/main' && github.event.inputs.action == 'apply'
    
    - name: Upload kubeconfig
      uses: actions/upload-artifact@v4
      with:
        name: kubeconfig
        path: kube_config_rke-cluster.yml
        # retention-days: 1
        
    - name: Terraform Destroy
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform destroy -auto-approve
      if: github.ref == 'refs/heads/main' && github.event.inputs.action == 'destroy'
      
    # - name: Upload Terraform Plan
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: terraform-plan
    #     path: ${{ env.TF_WORKING_DIR }}/tfplan
    #   # if: github.event_name == 'pull_request'